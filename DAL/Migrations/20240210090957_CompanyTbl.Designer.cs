// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(JobFinderDataContext))]
    [Migration("20240210090957_CompanyTbl")]
    partial class CompanyTbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.tbl_Avl_Jobs", b =>
                {
                    b.Property<string>("Job_ID")
                        .HasColumnType("text");

                    b.Property<int>("AvailablePositions")
                        .HasColumnType("integer");

                    b.Property<string>("Coy_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorUserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FilledPositions")
                        .HasColumnType("integer");

                    b.Property<bool>("JobOpen")
                        .HasColumnType("boolean");

                    b.Property<string>("Job_Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SkillsRequired")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Job_ID");

                    b.HasIndex("Coy_ID");

                    b.ToTable("tbl_Avl_Jobs");
                });

            modelBuilder.Entity("DAL.tbl_Companies", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Estd_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HQ_Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Ratin")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("tbl_Companies");
                });

            modelBuilder.Entity("DAL.tbl_Job_Applicants", b =>
                {
                    b.Property<string>("Applicant_ID")
                        .HasColumnType("text");

                    b.Property<string>("Job_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Applicant_ID");

                    b.HasIndex("Job_ID");

                    b.ToTable("tbl_Job_Applicants");
                });

            modelBuilder.Entity("DAL.tbl_Users", b =>
                {
                    b.Property<string>("User_ID")
                        .HasColumnType("text");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("text");

                    b.Property<string>("Domain")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("text");

                    b.Property<DateTime>("Joined_On")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("YearsOfExperience")
                        .HasColumnType("integer");

                    b.HasKey("User_ID");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("DAL.tbl_Avl_Jobs", b =>
                {
                    b.HasOne("DAL.tbl_Companies", "Company")
                        .WithMany()
                        .HasForeignKey("Coy_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DAL.tbl_Job_Applicants", b =>
                {
                    b.HasOne("DAL.tbl_Users", "Users")
                        .WithMany()
                        .HasForeignKey("Applicant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.tbl_Avl_Jobs", "AvailableJobs")
                        .WithMany()
                        .HasForeignKey("Job_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvailableJobs");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
